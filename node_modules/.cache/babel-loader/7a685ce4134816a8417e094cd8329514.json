{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react_project/realchat/realtimechat/src/Component/Chat/ChatContainer.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport Chatlist from './Chatlist';\nimport Chat from './Chat';\nimport './style.css';\n\nclass ChatContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\",\n      userchat: [],\n      chatusers: [],\n      userList: []\n    };\n\n    this.getChatedUserList = () => {\n      axios.get(\"http://localhost:8000/chatroom/chateduser\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        // setSearchpeopledata(res.data)\n        // setAlluser(res.data)\n        let firstId = res.data[0]._id;\n      }).catch(err => {// setTimeout(getchatuser,3000)\n      });\n    };\n\n    this.getuserchat = id => {\n      axios.get(\"http://localhost:8000/chatroom/getuserchat/\" + id, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        // console.log(res.data)\n        this.setState({\n          userchat: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.sendmsg = e => {\n      e.preventDefault();\n      let payload = {\n        message: this.state.message,\n        attachment: '',\n        receiver: this.props.match.params.id\n      };\n      axios.post(\"http://localhost:8000/chatroom/savechat\", payload, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        this.setState({\n          message: \"\"\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onchangeHandler = val => {\n      this.setState({\n        message: val\n      });\n    };\n\n    this.selectuser = item => {\n      console.log(item);\n      axios.post(\"http://localhost:8000/chatroom/savechatroom\", {\n        receiver: item._id\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        console.log(res.data); // this.setState({message:\"\"})\n      }).catch(err => {\n        console.log(err);\n      });\n      this.props.history.push(\"/newchat/\" + item._id);\n    };\n  }\n\n  componentDidMount() {\n    this.getuserchat(this.props.match.params.id);\n    this.getChatedUserList();\n  }\n\n  componentDidUpdate(PrevProps) {\n    // console.log(PrevProps.match.params.id,this.props.match.params.id)\n    if (PrevProps.match.params.id !== this.props.match.params.id) {\n      this.getuserchat(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chatlist, {\n      selectuser: this.selectuser,\n      state: this.state,\n      sender: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Chat, {\n      sendmsg: this.sendmsg,\n      state: this.state,\n      onchangeHandler: this.onchangeHandler,\n      sender: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(ChatContainer);","map":{"version":3,"sources":["/var/www/html/react_project/realchat/realtimechat/src/Component/Chat/ChatContainer.js"],"names":["React","Component","axios","withRouter","Chatlist","Chat","ChatContainer","state","message","userchat","chatusers","userList","getChatedUserList","get","headers","Authorization","localStorage","getItem","then","res","firstId","data","_id","catch","err","getuserchat","id","setState","console","log","sendmsg","e","preventDefault","payload","attachment","receiver","props","match","params","post","onchangeHandler","val","selectuser","item","history","push","componentDidMount","componentDidUpdate","PrevProps","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport Chatlist from './Chatlist'\nimport Chat from './Chat'\nimport './style.css'\n\nclass ChatContainer extends Component{\n\n  state = {\n    message:\"\",\n    userchat:[],\n    chatusers:[],\n    userList:[]\n  }\n\n  getChatedUserList = () => {\n      axios.get(\"http://localhost:8000/chatroom/chateduser\",{\n          headers:{\n            Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n          }\n      })\n        .then(res=>{\n          // setSearchpeopledata(res.data)\n          // setAlluser(res.data)\n          let firstId = res.data[0]._id;\n\n      })\n      .catch(err=>{\n        // setTimeout(getchatuser,3000)\n      })\n  }\n\n  getuserchat = (id) => {\n    axios.get(\"http://localhost:8000/chatroom/getuserchat/\"+id,{\n        headers:{\n          Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n        }\n    })\n    .then(res=>{\n      // console.log(res.data)\n      this.setState({userchat:res.data}) \n    })\n    .catch(err=>{\n      console.log(err)    \n    })\n  }\n\n  componentDidMount(){\n    this.getuserchat(this.props.match.params.id)\n    this.getChatedUserList()\n  }\n\n  componentDidUpdate(PrevProps){\n    // console.log(PrevProps.match.params.id,this.props.match.params.id)\n    if(PrevProps.match.params.id!==this.props.match.params.id){\n      this.getuserchat(this.props.match.params.id)\n    }\n  }\n\n  sendmsg = (e) => {\n    e.preventDefault();\n    let payload = {\n      message:this.state.message,\n      attachment:'',\n      receiver:this.props.match.params.id\n    }\n    axios.post(\"http://localhost:8000/chatroom/savechat\",payload,{\n        headers:{\n          Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n        }\n    })\n    .then(res=>{\n      this.setState({message:\"\"})\n    })\n    .catch(err=>{\n      console.log(err)    \n    })\n  }\n  \n  onchangeHandler = (val) => {\n    this.setState({message:val})\n  }\n\n  selectuser = (item) => {\n    console.log(item)\n    axios.post(\"http://localhost:8000/chatroom/savechatroom\",{receiver:item._id},{\n        headers:{\n          Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n        }\n    })\n    .then(res=>{\n      console.log(res.data)\n      // this.setState({message:\"\"})\n    })\n    .catch(err=>{\n      console.log(err)    \n    })\n    this.props.history.push(\"/newchat/\"+item._id)\n  }\n\n  render(){\n    return(\n          <div id=\"container\">\n              <Chatlist selectuser={this.selectuser} state={this.state} sender={this.props.match.params.id}/>\n              <Chat  sendmsg={this.sendmsg} state={this.state} onchangeHandler={this.onchangeHandler} sender={this.props.match.params.id}/>\n          </div>\n      );\n    }\n}\n\n\nexport default withRouter(ChatContainer)"]},"metadata":{},"sourceType":"module"}