{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\nimport httpInstance from \"../httpClient\";\nexport const getuserlist = (history, callback) => {\n  console.log(history);\n  return dispatch => {\n    return httpInstance({\n      method: \"get\",\n      url: \"chatroom/chateduser\"\n    }).then(res => {\n      // console.log(res.data)\n      history.push(\"/messenger/\" + res.data[0]._id + \"/\" + res.data[0].chatId);\n      dispatch(setUserlist(res.data));\n    }).catch(error => {\n      // console.log(error)\n      history.push(\"/messenger\");\n      dispatch(setUserlist([]));\n    });\n  };\n};\nexport const getalluser = (payload, callback) => {\n  return dispatch => {\n    return httpInstance({\n      method: \"get\",\n      url: \"user/getusers\"\n    }).then(res => {\n      // console.log(res.data)\n      dispatch(setAlluser(res.data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(setAlluser([]));\n    });\n  };\n};\nexport const getuserchat = (cid, callback) => {\n  return dispatch => {\n    return httpInstance({\n      method: \"get\",\n      url: \"chatroom/getuserchat/\" + cid\n    }).then(res => {\n      // console.log(res.data)\n      dispatch(setUserchat(res.data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(setUserchat([]));\n    });\n  };\n};\nexport const sendmsg = (payload, callback) => {\n  return dispatch => {\n    return httpInstance({\n      method: \"post\",\n      url: \"chatroom/savechat\",\n      data: payload\n    }).then(res => {\n      console.log(res.data); // dispatch(setUserchat(res.data))\n    }).catch(error => {\n      console.log(error); // dispatch(setUserlist([]))\n    });\n  };\n};\nexport const setUserlist = payload => {\n  return {\n    type: types.USER_CHAT_LIST,\n    payload: payload\n  };\n};\nexport const setAlluser = payload => {\n  return {\n    type: types.ALL_USER,\n    payload: payload\n  };\n};\nexport const addNewUser = payload => {\n  return {\n    type: types.ADD_USER_CHAT_LIST,\n    payload: payload\n  };\n};\nexport const setUserchat = payload => {\n  return {\n    type: types.USER_CHAT,\n    payload: payload\n  };\n};","map":{"version":3,"sources":["/var/www/html/react_project/realchat/chatapp/src/actions/chatActions.js"],"names":["types","httpInstance","getuserlist","history","callback","console","log","dispatch","method","url","then","res","push","data","_id","chatId","setUserlist","catch","error","getalluser","payload","setAlluser","getuserchat","cid","setUserchat","sendmsg","type","USER_CHAT_LIST","ALL_USER","addNewUser","ADD_USER_CHAT_LIST","USER_CHAT"],"mappings":"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","sourcesContent":["import * as types from \"../constants/ActionTypes\";\nimport httpInstance from \"../httpClient\";\n\nexport const getuserlist = (history,callback) => {\n    console.log(history)\n    return dispatch => {\n        return  httpInstance({\n                  method: \"get\",\n                  url: \"chatroom/chateduser\"\n                })\n                .then((res) => {\n                    // console.log(res.data)\n                    history.push(\"/messenger/\"+res.data[0]._id+\"/\"+res.data[0].chatId)\n                    dispatch(setUserlist(res.data))\n                })\n                .catch((error) => {\n                    // console.log(error)\n                    history.push(\"/messenger\")\n                    dispatch(setUserlist([]))\n                });\n    }\n}\n\nexport const getalluser = (payload,callback) => {\n    return dispatch => {\n        return  httpInstance({\n                  method: \"get\",\n                  url: \"user/getusers\"\n                })\n                .then((res) => {\n                    // console.log(res.data)\n                    dispatch(setAlluser(res.data))\n                })\n                .catch((error) => {\n                    console.log(error)\n                    dispatch(setAlluser([]))\n                });\n    }\n}\n\nexport const getuserchat = (cid,callback) => {\n    return dispatch => {\n        return  httpInstance({\n                  method: \"get\",\n                  url: \"chatroom/getuserchat/\"+cid\n                })\n                .then((res) => {\n                    // console.log(res.data)\n                    dispatch(setUserchat(res.data))\n                })\n                .catch((error) => {\n                    console.log(error)\n                    dispatch(setUserchat([]))\n                });\n    }\n}\n\nexport const sendmsg = (payload,callback) => {\n    return dispatch => {\n        return  httpInstance({\n                  method: \"post\",\n                  url: \"chatroom/savechat\",\n                  data:payload\n                })\n                .then((res) => {\n                    console.log(res.data)\n                    // dispatch(setUserchat(res.data))\n                })\n                .catch((error) => {\n                    console.log(error)\n                    // dispatch(setUserlist([]))\n                });\n    }\n}\n\nexport const setUserlist = (payload) => {\n    return {\n        type: types.USER_CHAT_LIST,\n        payload: payload,\n    }\n}\n\nexport const setAlluser = (payload) => {\n    return {\n        type: types.ALL_USER,\n        payload: payload,\n    }\n}\n\nexport const addNewUser = (payload) => {\n    return {\n        type: types.ADD_USER_CHAT_LIST,\n        payload: payload,\n    }\n}\n\nexport const setUserchat = (payload) => {\n    return {\n        type: types.USER_CHAT,\n        payload: payload,\n    }\n}"]},"metadata":{},"sourceType":"module"}