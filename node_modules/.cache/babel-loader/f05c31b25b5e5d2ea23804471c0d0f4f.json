{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react_project/realchat/realtimechat/src/Component/Chat/ChatContainer.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { parse, stringify } from \"query-string\";\nimport Chatlist from './Chatlist';\nimport Chat from './Chat';\nimport './style.css';\n\nclass ChatContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\",\n      userchat: [],\n      chatusers: [],\n      userList: []\n    };\n\n    this.getChatedUserList = () => {\n      axios.get(\"http://localhost:8000/chatroom/chateduser\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        this.setState({\n          userList: res.data\n        });\n        let chatid = res.data[0]._id;\n        let query = { ...parse(this.props.location.search)\n        }; // let url = stringify(query).replace(/%23/g,\"#\")\n        // this.props.history.push({\n        //   pathname: this.props.location.pathname,\n        //   search: url\n        // });\n\n        console.log(this.props.location); // this.props.history.push(\"/newchat/\"+item._id)\n      }).catch(err => {// setTimeout(this.getChatedUserList,3000)\n      });\n    };\n\n    this.getuserchat = id => {\n      axios.get(\"http://localhost:8000/chatroom/getuserchat/\" + id, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        // console.log(res.data)\n        this.setState({\n          userchat: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.sendmsg = e => {\n      e.preventDefault();\n      let payload = {\n        message: this.state.message,\n        attachmentName: '',\n        attachmentType: '',\n        channelId: this.props.match.params.cid,\n        receiver: this.props.match.params.id\n      };\n      axios.post(\"http://localhost:8000/chatroom/savechat\", payload, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        this.setState({\n          message: \"\"\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onchangeHandler = val => {\n      this.setState({\n        message: val\n      });\n    };\n\n    this.selectuser = item => {\n      // console.log(item)\n      // axios.post(\"http://localhost:8000/chatroom/savechatroom\",{receiver:item._id},{\n      //     headers:{\n      //       Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n      //     }\n      // })\n      // .then(res=>{\n      //   // console.log(res.data)\n      //   // this.setState({userList:res.data})\n      // })\n      // .catch(err=>{\n      //   console.log(err)\n      // })\n      this.props.history.push(\"/newchat/\" + item._id);\n    };\n  }\n\n  componentDidMount() {\n    this.getChatedUserList();\n    this.getuserchat(this.props.match.params.id);\n  }\n\n  componentDidUpdate(PrevProps) {\n    // console.log(PrevProps.match.params.id,this.props.match.params.id)\n    if (PrevProps.match.params.id !== this.props.match.params.id) {\n      this.getuserchat(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chatlist, {\n      selectuser: this.selectuser,\n      state: this.state,\n      sender: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Chat, {\n      sendmsg: this.sendmsg,\n      state: this.state,\n      onchangeHandler: this.onchangeHandler,\n      sender: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(ChatContainer);","map":{"version":3,"sources":["/var/www/html/react_project/realchat/realtimechat/src/Component/Chat/ChatContainer.js"],"names":["React","Component","axios","withRouter","parse","stringify","Chatlist","Chat","ChatContainer","state","message","userchat","chatusers","userList","getChatedUserList","get","headers","Authorization","localStorage","getItem","then","res","setState","data","chatid","_id","query","props","location","search","console","log","catch","err","getuserchat","id","sendmsg","e","preventDefault","payload","attachmentName","attachmentType","channelId","match","params","cid","receiver","post","onchangeHandler","val","selectuser","item","history","push","componentDidMount","componentDidUpdate","PrevProps","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { parse, stringify } from \"query-string\";\nimport Chatlist from './Chatlist'\nimport Chat from './Chat'\nimport './style.css'\n\nclass ChatContainer extends Component{\n\n  state = {\n    message:\"\",\n    userchat:[],\n    chatusers:[],\n    userList:[]\n  }\n\n  getChatedUserList = () => {\n      axios.get(\"http://localhost:8000/chatroom/chateduser\",{\n          headers:{\n            Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n          }\n      })\n        .then(res=>{\n          this.setState({userList:res.data})\n          let chatid = res.data[0]._id;\n          let query = {...parse(this.props.location.search)};\n          \n          // let url = stringify(query).replace(/%23/g,\"#\")\n          // this.props.history.push({\n          //   pathname: this.props.location.pathname,\n          //   search: url\n          // });\n\n\n          console.log(this.props.location)\n          // this.props.history.push(\"/newchat/\"+item._id)\n      })\n      .catch(err=>{\n        // setTimeout(this.getChatedUserList,3000)\n      })\n  }\n\n  getuserchat = (id) => {\n    axios.get(\"http://localhost:8000/chatroom/getuserchat/\"+id,{\n        headers:{\n          Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n        }\n    })\n    .then(res=>{\n      // console.log(res.data)\n      this.setState({userchat:res.data}) \n    })\n    .catch(err=>{\n      console.log(err)    \n    })\n  }\n\n  componentDidMount(){\n    this.getChatedUserList()\n    this.getuserchat(this.props.match.params.id)\n  }\n\n  componentDidUpdate(PrevProps){\n    // console.log(PrevProps.match.params.id,this.props.match.params.id)\n    if(PrevProps.match.params.id!==this.props.match.params.id){\n      this.getuserchat(this.props.match.params.id)\n    }\n  }\n\n  sendmsg = (e) => {\n    e.preventDefault();\n    let payload = {\n      message:this.state.message,\n      attachmentName:'',\n      attachmentType:'',\n      channelId:this.props.match.params.cid,\n      receiver:this.props.match.params.id\n    }\n    axios.post(\"http://localhost:8000/chatroom/savechat\",payload,{\n        headers:{\n          Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n        }\n    })\n    .then(res=>{\n      this.setState({message:\"\"})\n    })\n    .catch(err=>{\n      console.log(err)    \n    })\n  }\n  \n  onchangeHandler = (val) => {\n    this.setState({message:val})\n  }\n\n  selectuser = (item) => {\n    // console.log(item)\n    // axios.post(\"http://localhost:8000/chatroom/savechatroom\",{receiver:item._id},{\n    //     headers:{\n    //       Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n    //     }\n    // })\n    // .then(res=>{\n    //   // console.log(res.data)\n    //   // this.setState({userList:res.data})\n    // })\n    // .catch(err=>{\n    //   console.log(err)\n    // })\n    this.props.history.push(\"/newchat/\"+item._id)\n  }\n\n  render(){\n    return(\n          <div id=\"container\">\n              <Chatlist selectuser={this.selectuser} state={this.state} sender={this.props.match.params.id}/>\n              <Chat sendmsg={this.sendmsg} state={this.state} onchangeHandler={this.onchangeHandler} sender={this.props.match.params.id}/>\n          </div>\n      );\n    }\n}\n\n\nexport default withRouter(ChatContainer)"]},"metadata":{},"sourceType":"module"}