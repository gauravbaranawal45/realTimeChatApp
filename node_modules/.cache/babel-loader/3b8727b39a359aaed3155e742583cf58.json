{"ast":null,"code":"import React from'react';import Avatar from'@material-ui/core/Avatar';import Button from'@material-ui/core/Button';import CssBaseline from'@material-ui/core/CssBaseline';import TextField from'@material-ui/core/TextField';import FormControlLabel from'@material-ui/core/FormControlLabel';import Checkbox from'@material-ui/core/Checkbox';// import Link from '@material-ui/core/Link';\nimport{Link}from\"react-router-dom\";import Grid from'@material-ui/core/Grid';import LockOutlinedIcon from'@material-ui/icons/LockOutlined';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';import Container from'@material-ui/core/Container';import{useFormik}from'formik';import*as Yup from'yup';import axios from\"axios\";var useStyles=makeStyles(function(theme){return{paper:{//marginTop: theme.spacing(8),\ndisplay:'flex',flexDirection:'column',alignItems:'center'},avatar:{margin:theme.spacing(1),backgroundColor:theme.palette.secondary.main},form:{width:'100%',// Fix IE 11 issue.\nmarginTop:theme.spacing(1)},submit:{margin:theme.spacing(3,0,2)}};});export default function SignIn(props){var classes=useStyles();var formik=useFormik({initialValues:{psw:'',email_mob:''},validationSchema:Yup.object({email_mob:Yup.string().min(10,'Must be 15 characters or less').required('Required'),psw:Yup.string().required('Required')}),onSubmit:function onSubmit(values){var email=values.email_mob;var password=values.psw;axios.post(\"http://localhost:8000/user/login\",{email:email,password:password}).then(function(response){console.log(response.data);if(!response.data.error){localStorage.setItem('__chatauth',JSON.stringify(response.data));window.location.href=\"/messenger\";}else{alert(response.data.error);}}).catch(function(err){//   if (\n//     err &&\n//     err.response &&\n//     err.response.data &&\n//     err.response.data.message\n//   )\n//     makeToast(\"error\", err.response.data.message);\n});}});var btnDisable=function btnDisable(){var errorLen=Object.keys(formik.errors).length;var touchedLen=Object.keys(formik.touched).length;if(errorLen===0&&touchedLen>0){return true;}else{return false;}};// console.log(props)\nreturn/*#__PURE__*/React.createElement(Container,{component:\"main\",maxWidth:\"xs\"},/*#__PURE__*/React.createElement(CssBaseline,null),/*#__PURE__*/React.createElement(\"div\",{className:classes.paper},/*#__PURE__*/React.createElement(Avatar,{className:classes.avatar},/*#__PURE__*/React.createElement(LockOutlinedIcon,null)),/*#__PURE__*/React.createElement(Typography,{component:\"h1\",variant:\"h5\"},\"Sign in\"),/*#__PURE__*/React.createElement(\"form\",{className:classes.form,noValidate:true,onSubmit:formik.handleSubmit},/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,id:\"email\",label:\"Email Address Or Mobile\",name:\"email_mob\",autoComplete:\"new-password\",autoFocus:true},formik.getFieldProps('email_mob'))),/*#__PURE__*/React.createElement(TextField,Object.assign({variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,name:\"psw\",label:\"Password\",type:\"password\",id:\"password\",autoComplete:\"new-password\"},formik.getFieldProps('psw'))),/*#__PURE__*/React.createElement(FormControlLabel,{control:/*#__PURE__*/React.createElement(Checkbox,{value:\"remember\",color:\"primary\"}),label:\"Remember me\"}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",className:classes.submit,disabled:!btnDisable()},\"Sign In\"),/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(Link,{to:\"#\",onClick:props.clickForgotpassword,variant:\"body2\"},\"Forgot password?\")),/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(Link,{to:\"/signup\",variant:\"body2\",onClick:props.clickDontAccount},\"Don't have an account? Sign Up\"))))));}","map":{"version":3,"sources":["/var/www/html/react_project/realchat/github/realTimeChatApp/src/Component/Auth/Signin.js"],"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","LockOutlinedIcon","Typography","makeStyles","Container","useFormik","Yup","axios","useStyles","theme","paper","display","flexDirection","alignItems","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","width","marginTop","submit","SignIn","props","classes","formik","initialValues","psw","email_mob","validationSchema","object","string","min","required","onSubmit","values","email","password","post","then","response","console","log","data","error","localStorage","setItem","JSON","stringify","window","location","href","alert","catch","err","btnDisable","errorLen","Object","keys","errors","length","touchedLen","touched","handleSubmit","getFieldProps","clickForgotpassword","clickDontAccount"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport {Link} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from \"axios\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    //marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  const formik = useFormik({\n    initialValues: {\n      psw:'',\n      email_mob:''\n    },\n    validationSchema: Yup.object({\n      email_mob: Yup.string()\n        .min(10, 'Must be 15 characters or less')\n        .required('Required'),\n      psw: Yup.string()\n        .required('Required'),\n    }),\n    onSubmit: values => {\n      let email = values.email_mob;\n      let password = values.psw;\n\n      axios\n      .post(\"http://localhost:8000/user/login\", {\n        email,\n        password,\n      })\n      .then((response) => {\n        console.log(response.data)\n        if(!response.data.error){\n          localStorage.setItem('__chatauth',JSON.stringify(response.data));\n          window.location.href = \"/messenger\"\n        }else{\n          alert(response.data.error)\n        }\n      })\n      .catch((err) => {\n      //   if (\n      //     err &&\n      //     err.response &&\n      //     err.response.data &&\n      //     err.response.data.message\n      //   )\n      //     makeToast(\"error\", err.response.data.message);\n      });\n    },\n  });\n  const btnDisable = () => {\n    let errorLen = Object.keys(formik.errors).length;\n    let touchedLen = Object.keys(formik.touched).length;\n    if(errorLen===0 && touchedLen>0){\n      return true\n    }else{\n      return false\n    }\n  }\n  // console.log(props)\n  return (\n    <Container component=\"main\" maxWidth=\"xs\" >\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={formik.handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address Or Mobile\"\n            name=\"email_mob\"\n            autoComplete=\"new-password\"\n            autoFocus\n            {...formik.getFieldProps('email_mob')}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"psw\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"new-password\"\n            {...formik.getFieldProps('psw')}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            disabled={!btnDisable()}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link to=\"#\" onClick={props.clickForgotpassword} variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link to=\"/signup\" variant=\"body2\" onClick={props.clickDontAccount}>\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}