{"ast":null,"code":"import _toConsumableArray from\"/var/www/html/react_project/realchat/github/realTimeChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/var/www/html/react_project/realchat/github/realTimeChatApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as types from\"../constants/ActionTypes\";var initialState={userList:[],allUsers:[],userchat:[]};function setUserList(state,payload){return _objectSpread(_objectSpread({},state),{},{userList:payload});}function setAllusers(state,payload){return _objectSpread(_objectSpread({},state),{},{allUsers:payload});}function setNewUser(state,payload){var newState=_toConsumableArray(state.userList);newState=newState.filter(function(item){return item._id!==payload._id;});newState.unshift(payload);return _objectSpread(_objectSpread({},state),{},{userList:newState});}function setNewmsg(state,payload){var newState=_toConsumableArray(state.userchat);newState.push(payload);console.log(newState);return _objectSpread(_objectSpread({},state),{},{userchat:newState});}var Chat=function Chat(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case types.USER_CHAT_LIST:return setUserList(state,action.payload);case types.ALL_USER:return setAllusers(state,action.payload);case types.ADD_NEWUSER:return setNewUser(state,action.payload);case types.USER_CHAT:return _objectSpread(_objectSpread({},state),{},{userchat:action.payload});case types.SEND_MSG:return setNewmsg(state,action.payload);default:return state;}};export default Chat;","map":{"version":3,"sources":["/var/www/html/react_project/realchat/github/realTimeChatApp/src/reducers/chatReducers.js"],"names":["types","initialState","userList","allUsers","userchat","setUserList","state","payload","setAllusers","setNewUser","newState","filter","item","_id","unshift","setNewmsg","push","console","log","Chat","action","type","USER_CHAT_LIST","ALL_USER","ADD_NEWUSER","USER_CHAT","SEND_MSG"],"mappings":"2WAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,0BAAvB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACpBC,QAAQ,CAAC,EADW,CAEpBC,QAAQ,CAAC,EAFW,CAGjBC,QAAQ,CAAC,EAHQ,CAArB,CAMA,QAASC,CAAAA,WAAT,CAAqBC,KAArB,CAA4BC,OAA5B,CAAqC,CACjC,sCAAWD,KAAX,MAAiBJ,QAAQ,CAACK,OAA1B,GACH,CAED,QAASC,CAAAA,WAAT,CAAqBF,KAArB,CAA4BC,OAA5B,CAAqC,CACjC,sCAAWD,KAAX,MAAiBH,QAAQ,CAACI,OAA1B,GACH,CAED,QAASE,CAAAA,UAAT,CAAoBH,KAApB,CAA2BC,OAA3B,CAAoC,CAChC,GAAIG,CAAAA,QAAQ,oBAAOJ,KAAK,CAACJ,QAAb,CAAZ,CACAQ,QAAQ,CAAGA,QAAQ,CAACC,MAAT,CAAgB,SAAAC,IAAI,QAAEA,CAAAA,IAAI,CAACC,GAAL,GAAWN,OAAO,CAACM,GAArB,EAApB,CAAX,CACAH,QAAQ,CAACI,OAAT,CAAiBP,OAAjB,EACA,sCAAWD,KAAX,MAAiBJ,QAAQ,CAACQ,QAA1B,GACH,CAED,QAASK,CAAAA,SAAT,CAAmBT,KAAnB,CAA0BC,OAA1B,CAAmC,CAC/B,GAAIG,CAAAA,QAAQ,oBAAOJ,KAAK,CAACF,QAAb,CAAZ,CACAM,QAAQ,CAACM,IAAT,CAAcT,OAAd,EACAU,OAAO,CAACC,GAAR,CAAYR,QAAZ,EACA,sCAAWJ,KAAX,MAAiBF,QAAQ,CAACM,QAA1B,GACH,CAGD,GAAMS,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAkC,IAAjCb,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXmB,CAAAA,MAAW,2CAC3C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKrB,CAAAA,KAAK,CAACsB,cAAX,CACI,MAAOjB,CAAAA,WAAW,CAACC,KAAD,CAAOc,MAAM,CAACb,OAAd,CAAlB,CACJ,IAAKP,CAAAA,KAAK,CAACuB,QAAX,CACI,MAAOf,CAAAA,WAAW,CAACF,KAAD,CAAOc,MAAM,CAACb,OAAd,CAAlB,CACJ,IAAKP,CAAAA,KAAK,CAACwB,WAAX,CACI,MAAOf,CAAAA,UAAU,CAACH,KAAD,CAAOc,MAAM,CAACb,OAAd,CAAjB,CACJ,IAAKP,CAAAA,KAAK,CAACyB,SAAX,CACI,sCAAWnB,KAAX,MAAiBF,QAAQ,CAACgB,MAAM,CAACb,OAAjC,GACJ,IAAKP,CAAAA,KAAK,CAAC0B,QAAX,CACI,MAAOX,CAAAA,SAAS,CAACT,KAAD,CAAOc,MAAM,CAACb,OAAd,CAAhB,CACJ,QACI,MAAOD,CAAAA,KAAP,CAZR,CAcH,CAfD,CAgBA,cAAea,CAAAA,IAAf","sourcesContent":["import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n\tuserList:[],\n\tallUsers:[],\n    userchat:[],\n}\n\nfunction setUserList(state, payload) {\n    return {...state,userList:payload}\n}\n\nfunction setAllusers(state, payload) {\n    return {...state,allUsers:payload}\n}\n\nfunction setNewUser(state, payload) {\n    let newState = [...state.userList]\n    newState = newState.filter(item=>item._id!==payload._id)\n    newState.unshift(payload)\n    return {...state,userList:newState}\n}\n\nfunction setNewmsg(state, payload) {\n    let newState = [...state.userchat]\n    newState.push(payload)\n    console.log(newState)\n    return {...state,userchat:newState}\n}\n\n\nconst Chat = (state = initialState, action) => {\n    switch (action.type) {\n        case types.USER_CHAT_LIST :\n            return setUserList(state,action.payload);\n        case types.ALL_USER :\n            return setAllusers(state,action.payload);\n        case types.ADD_NEWUSER :\n            return setNewUser(state,action.payload);\n        case types.USER_CHAT :\n            return {...state,userchat:action.payload};\n        case types.SEND_MSG :\n            return setNewmsg(state,action.payload);\n        default:\n            return state;\n    }\n}\nexport default Chat;"]},"metadata":{},"sourceType":"module"}