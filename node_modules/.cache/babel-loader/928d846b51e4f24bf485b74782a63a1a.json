{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\nimport httpInstance from \"../httpClient\";\nexport const getuserlist = (payload, callback) => {\n  return dispatch => {\n    return httpInstance({\n      method: \"get\",\n      url: \"chatroom/chateduser\"\n    }).then(res => {\n      console.log(res.data);\n      dispatch(setUserlist(res.data)); // callback(true)\n    }).catch(error => {\n      console.log(error);\n      dispatch(setUserlist([])); // callback(true)\n    });\n  };\n};\nexport const getalluser = (payload, callback) => {\n  return dispatch => {\n    return httpInstance({\n      method: \"get\",\n      url: \"user/getusers\"\n    }).then(res => {\n      console.log(res.data);\n      dispatch(setAlluser(res.data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(setUserlist([]));\n    });\n  };\n};\nexport const setUserlist = payload => {\n  return {\n    type: types.USER_CHAT_LIST,\n    payload: payload\n  };\n};\nexport const setAlluser = payload => {\n  return {\n    type: types.ALL_USER,\n    payload: payload\n  };\n};\nexport const addNewUser = payload => {\n  return {\n    type: types.ADD_USER_CHAT_LIST,\n    payload: payload\n  };\n};","map":{"version":3,"sources":["/var/www/html/react_project/realchat/chatapp/src/actions/chatActions.js"],"names":["types","httpInstance","getuserlist","payload","callback","dispatch","method","url","then","res","console","log","data","setUserlist","catch","error","getalluser","setAlluser","type","USER_CHAT_LIST","ALL_USER","addNewUser","ADD_USER_CHAT_LIST"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,OAAD,EAASC,QAAT,KAAsB;AAC7C,SAAOC,QAAQ,IAAI;AACf,WAAQJ,YAAY,CAAC;AACXK,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAAD,CAAZ,CAICC,IAJD,CAIOC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAP,MAAAA,QAAQ,CAACQ,WAAW,CAACJ,GAAG,CAACG,IAAL,CAAZ,CAAR,CAFW,CAGX;AACH,KARD,EASCE,KATD,CASQC,KAAD,IAAW;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAV,MAAAA,QAAQ,CAACQ,WAAW,CAAC,EAAD,CAAZ,CAAR,CAFc,CAGd;AACH,KAbD,CAAR;AAcH,GAfD;AAgBH,CAjBM;AAmBP,OAAO,MAAMG,UAAU,GAAG,CAACb,OAAD,EAASC,QAAT,KAAsB;AAC5C,SAAOC,QAAQ,IAAI;AACf,WAAQJ,YAAY,CAAC;AACXK,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAAD,CAAZ,CAICC,IAJD,CAIOC,GAAD,IAAS;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAP,MAAAA,QAAQ,CAACY,UAAU,CAACR,GAAG,CAACG,IAAL,CAAX,CAAR;AACH,KAPD,EAQCE,KARD,CAQQC,KAAD,IAAW;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAV,MAAAA,QAAQ,CAACQ,WAAW,CAAC,EAAD,CAAZ,CAAR;AACH,KAXD,CAAR;AAYH,GAbD;AAcH,CAfM;AAiBP,OAAO,MAAMA,WAAW,GAAIV,OAAD,IAAa;AACpC,SAAO;AACHe,IAAAA,IAAI,EAAElB,KAAK,CAACmB,cADT;AAEHhB,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMc,UAAU,GAAId,OAAD,IAAa;AACnC,SAAO;AACHe,IAAAA,IAAI,EAAElB,KAAK,CAACoB,QADT;AAEHjB,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMkB,UAAU,GAAIlB,OAAD,IAAa;AACnC,SAAO;AACHe,IAAAA,IAAI,EAAElB,KAAK,CAACsB,kBADT;AAEHnB,IAAAA,OAAO,EAAEA;AAFN,GAAP;AAIH,CALM","sourcesContent":["import * as types from \"../constants/ActionTypes\";\nimport httpInstance from \"../httpClient\";\n\nexport const getuserlist = (payload,callback) => {\n    return dispatch => {\n        return  httpInstance({\n                  method: \"get\",\n                  url: \"chatroom/chateduser\"\n                })\n                .then((res) => {\n                    console.log(res.data)\n                    dispatch(setUserlist(res.data))\n                    // callback(true)\n                })\n                .catch((error) => {\n                    console.log(error)\n                    dispatch(setUserlist([]))\n                    // callback(true)\n                });\n    }\n}\n\nexport const getalluser = (payload,callback) => {\n    return dispatch => {\n        return  httpInstance({\n                  method: \"get\",\n                  url: \"user/getusers\"\n                })\n                .then((res) => {\n                    console.log(res.data)\n                    dispatch(setAlluser(res.data))\n                })\n                .catch((error) => {\n                    console.log(error)\n                    dispatch(setUserlist([]))\n                });\n    }\n}\n\nexport const setUserlist = (payload) => {\n    return {\n        type: types.USER_CHAT_LIST,\n        payload: payload,\n    }\n}\n\nexport const setAlluser = (payload) => {\n    return {\n        type: types.ALL_USER,\n        payload: payload,\n    }\n}\n\nexport const addNewUser = (payload) => {\n    return {\n        type: types.ADD_USER_CHAT_LIST,\n        payload: payload,\n    }\n}"]},"metadata":{},"sourceType":"module"}