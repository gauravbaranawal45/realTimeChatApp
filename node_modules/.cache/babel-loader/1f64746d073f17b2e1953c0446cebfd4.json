{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\nimport httpInstance from \"../httpClient\";\nexport const getuserlist = (history, callback) => {\n  // console.log(history)\n  return dispatch => {\n    return httpInstance({\n      method: \"get\",\n      url: \"chatroom/chateduser\"\n    }).then(res => {\n      history.push(\"/messenger/\" + res.data[0]._id + \"/\" + res.data[0].chatId);\n      dispatch(setUserlist(res.data));\n    }).catch(error => {\n      // console.log(error)\n      history.push(\"/messenger\");\n      dispatch(setUserlist([]));\n    });\n  };\n};\nexport const getalluser = (payload, callback) => {\n  return dispatch => {\n    return httpInstance({\n      method: \"get\",\n      url: \"user/getusers\"\n    }).then(res => {\n      // console.log(res.data)\n      dispatch(setAlluser(res.data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(setAlluser([]));\n    });\n  };\n};\nexport const getuserchat = (cid, callback) => {\n  return dispatch => {\n    return httpInstance({\n      method: \"get\",\n      url: \"chatroom/getuserchat/\" + cid\n    }).then(res => {\n      console.log(res.data);\n      dispatch(setUserchat(res.data));\n    }).catch(error => {\n      console.log(error);\n      dispatch(setUserchat([]));\n    });\n  };\n};\nexport const sendmsg = (payload, callback) => {\n  return dispatch => {\n    // return  httpInstance({\n    //           method: \"post\",\n    //           url: \"chatroom/savechat\",\n    //           data:payload\n    //         })\n    //         .then((res) => {\n    //             console.log(res.data)\n    return dispatch(setUserchat(payload)); // })\n    // .catch((error) => {\n    //     console.log(error)\n    //     // dispatch(setUserlist([]))\n    // });\n  };\n};\nexport const setUserlist = payload => {\n  return {\n    type: types.USER_CHAT_LIST,\n    payload: payload\n  };\n};\nexport const setAlluser = payload => {\n  return {\n    type: types.ALL_USER,\n    payload: payload\n  };\n};\nexport const addNewUser = payload => {\n  return {\n    type: types.ADD_USER_CHAT_LIST,\n    payload: payload\n  };\n};\nexport const setUserchat = payload => {\n  return {\n    type: types.USER_CHAT,\n    payload: payload\n  };\n};\nexport const setNewmsg = payload => {\n  return {\n    type: types.SEND_MSG,\n    payload: payload\n  };\n};","map":{"version":3,"sources":["/var/www/html/react_project/realchat/chatapp/src/actions/chatActions.js"],"names":["types","httpInstance","getuserlist","history","callback","dispatch","method","url","then","res","push","data","_id","chatId","setUserlist","catch","error","getalluser","payload","setAlluser","console","log","getuserchat","cid","setUserchat","sendmsg","type","USER_CHAT_LIST","ALL_USER","addNewUser","ADD_USER_CHAT_LIST","USER_CHAT","setNewmsg","SEND_MSG"],"mappings":"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","sourcesContent":["import * as types from \"../constants/ActionTypes\";\nimport httpInstance from \"../httpClient\";\n\nexport const getuserlist = (history,callback) => {\n    // console.log(history)\n    return dispatch => {\n        return  httpInstance({\n                  method: \"get\",\n                  url: \"chatroom/chateduser\"\n                })\n                .then((res) => {\n                    history.push(\"/messenger/\"+res.data[0]._id+\"/\"+res.data[0].chatId)\n                    dispatch(setUserlist(res.data))\n                })\n                .catch((error) => {\n                    // console.log(error)\n                    history.push(\"/messenger\")\n                    dispatch(setUserlist([]))\n                });\n    }\n}\n\nexport const getalluser = (payload,callback) => {\n    return dispatch => {\n        return  httpInstance({\n                  method: \"get\",\n                  url: \"user/getusers\"\n                })\n                .then((res) => {\n                    // console.log(res.data)\n                    dispatch(setAlluser(res.data))\n                })\n                .catch((error) => {\n                    console.log(error)\n                    dispatch(setAlluser([]))\n                });\n    }\n}\n\nexport const getuserchat = (cid,callback) => {\n    return dispatch => {\n        return  httpInstance({\n                  method: \"get\",\n                  url: \"chatroom/getuserchat/\"+cid\n                })\n                .then((res) => {\n                    console.log(res.data)\n                    dispatch(setUserchat(res.data))\n                })\n                .catch((error) => {\n                    console.log(error)\n                    dispatch(setUserchat([]))\n                });\n    }\n}\n\nexport const sendmsg = (payload,callback) => {\n    return dispatch => {\n        // return  httpInstance({\n        //           method: \"post\",\n        //           url: \"chatroom/savechat\",\n        //           data:payload\n        //         })\n        //         .then((res) => {\n        //             console.log(res.data)\n        return    dispatch(setUserchat(payload))\n                // })\n                // .catch((error) => {\n                //     console.log(error)\n                //     // dispatch(setUserlist([]))\n                // });\n    }\n}\n\nexport const setUserlist = (payload) => {\n    return {\n        type: types.USER_CHAT_LIST,\n        payload: payload,\n    }\n}\n\nexport const setAlluser = (payload) => {\n    return {\n        type: types.ALL_USER,\n        payload: payload,\n    }\n}\n\nexport const addNewUser = (payload) => {\n    return {\n        type: types.ADD_USER_CHAT_LIST,\n        payload: payload,\n    }\n}\n\nexport const setUserchat = (payload) => {\n    return {\n        type: types.USER_CHAT,\n        payload: payload,\n    }\n}\n\nexport const setNewmsg = (payload) => {\n    return {\n        type: types.SEND_MSG,\n        payload: payload,\n    }\n}"]},"metadata":{},"sourceType":"module"}