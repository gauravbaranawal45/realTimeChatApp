{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react_project/realchat/realtimechat/src/Component/Chat/ChatContainer.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { parse, stringify } from \"query-string\";\nimport Chatlist from './Chatlist';\nimport Chat from './Chat';\nimport './style.css';\n\nclass ChatContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\",\n      userchat: [],\n      chatusers: [],\n      userList: [],\n      open: false,\n      searchkey: '',\n      searchpeopledata: [],\n      suggetionvalue: [],\n      alluser: []\n    };\n\n    this.getChatedUserList = () => {\n      let userId = localStorage.getItem(\"CC_userId\");\n      axios.get(\"http://localhost:8000/chatroom/chateduser\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        this.setState({\n          userList: res.data\n        });\n        let chatid = res.data[0]._id;\n        let receiver;\n\n        if (res.data[0].receiver._id !== userId) {\n          receiver = res.data[0].receiver._id;\n        } else {\n          receiver = res.data[0].sender._id;\n        }\n\n        this.props.history.push(\"/newchat/\" + receiver + \"/\" + chatid);\n      }).catch(err => {// setTimeout(this.getChatedUserList,3000)\n      });\n    };\n\n    this.getuserchat = id => {\n      axios.get(\"http://localhost:8000/chatroom/getuserchat/\" + id, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        // console.log(res.data)\n        this.setState({\n          userchat: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.sendmsg = e => {\n      e.preventDefault();\n      let payload = {\n        message: this.state.message,\n        attachmentName: '',\n        attachmentType: '',\n        channelId: this.props.match.params.cid,\n        receiver: this.props.match.params.id\n      };\n      axios.post(\"http://localhost:8000/chatroom/savechat\", payload, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        this.setState({\n          message: \"\"\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onchangeHandler = val => {\n      this.setState({\n        message: val\n      });\n    };\n\n    this.selectuser = item => {\n      console.log(item);\n      this.props.history.push(\"/newchat/\" + item._id);\n    };\n  }\n\n  componentDidMount() {\n    this.getChatedUserList();\n    this.getuserchat(this.props.match.params.id);\n  }\n\n  componentDidUpdate(PrevProps) {\n    if (PrevProps.match.params.id !== this.props.match.params.id) {\n      this.getuserchat(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chatlist, {\n      selectuser: this.selectuser,\n      state: this.state,\n      sender: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Chat, {\n      sendmsg: this.sendmsg,\n      state: this.state,\n      onchangeHandler: this.onchangeHandler,\n      sender: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(ChatContainer);","map":{"version":3,"sources":["/var/www/html/react_project/realchat/realtimechat/src/Component/Chat/ChatContainer.js"],"names":["React","Component","axios","withRouter","parse","stringify","Chatlist","Chat","ChatContainer","state","message","userchat","chatusers","userList","open","searchkey","searchpeopledata","suggetionvalue","alluser","getChatedUserList","userId","localStorage","getItem","get","headers","Authorization","then","res","setState","data","chatid","_id","receiver","sender","props","history","push","catch","err","getuserchat","id","console","log","sendmsg","e","preventDefault","payload","attachmentName","attachmentType","channelId","match","params","cid","post","onchangeHandler","val","selectuser","item","componentDidMount","componentDidUpdate","PrevProps","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { parse, stringify } from \"query-string\";\nimport Chatlist from './Chatlist'\nimport Chat from './Chat'\nimport './style.css'\n\nclass ChatContainer extends Component{\n\n  state = {\n    message:\"\",\n    userchat:[],\n    chatusers:[],\n    userList:[],\n    open:false,\n    searchkey:'',\n    searchpeopledata:[],\n    suggetionvalue:[],\n    alluser:[],\n  }\n\n  getChatedUserList = () => {\n      let userId = localStorage.getItem(\"CC_userId\");\n      axios.get(\"http://localhost:8000/chatroom/chateduser\",{\n          headers:{\n            Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n          }\n      })\n      .then(res=>{\n        this.setState({userList:res.data})\n        let chatid = res.data[0]._id;\n        let receiver;\n        if(res.data[0].receiver._id!==userId){\n          receiver = res.data[0].receiver._id;    \n        }else{\n          receiver = res.data[0].sender._id;\n        }\n        this.props.history.push(\"/newchat/\"+receiver+\"/\"+chatid)\n    })\n    .catch(err=>{\n      // setTimeout(this.getChatedUserList,3000)\n    })\n  }\n\n  getuserchat = (id) => {\n    axios.get(\"http://localhost:8000/chatroom/getuserchat/\"+id,{\n        headers:{\n          Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n        }\n    })\n    .then(res=>{\n      // console.log(res.data)\n      this.setState({userchat:res.data}) \n    })\n    .catch(err=>{\n      console.log(err)    \n    })\n  }\n\n  componentDidMount(){\n    this.getChatedUserList()\n    this.getuserchat(this.props.match.params.id)\n  }\n\n  componentDidUpdate(PrevProps){\n    if(PrevProps.match.params.id!==this.props.match.params.id){\n      this.getuserchat(this.props.match.params.id)\n    }\n  }\n\n  sendmsg = (e) => {\n    e.preventDefault();\n    let payload = {\n      message:this.state.message,\n      attachmentName:'',\n      attachmentType:'',\n      channelId:this.props.match.params.cid,\n      receiver:this.props.match.params.id\n    }\n    axios.post(\"http://localhost:8000/chatroom/savechat\",payload,{\n        headers:{\n          Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n        }\n    })\n    .then(res=>{\n      this.setState({message:\"\"})\n    })\n    .catch(err=>{\n      console.log(err)    \n    })\n  }\n  \n  onchangeHandler = (val) => {\n    this.setState({message:val})\n  }\n\n  selectuser = (item) => {\n    console.log(item)\n    \n    this.props.history.push(\"/newchat/\"+item._id)\n  }\n\n  render(){\n    return(\n          <div id=\"container\">\n              <Chatlist selectuser={this.selectuser} state={this.state} sender={this.props.match.params.id}/>\n              <Chat sendmsg={this.sendmsg} state={this.state} onchangeHandler={this.onchangeHandler} sender={this.props.match.params.id}/>\n          </div>\n      );\n    }\n}\n\n\nexport default withRouter(ChatContainer)"]},"metadata":{},"sourceType":"module"}