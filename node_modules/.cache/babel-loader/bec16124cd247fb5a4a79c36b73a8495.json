{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react_project/realchat/chatapp/src/Component/Demo/Form.js\";\nimport React, { Component, useRef, useState } from \"react\";\nexport default function Newcompo() {\n  const inputRef = useRef(\"\");\n  const inputRef1 = useRef(\"\");\n  const [state, setState] = useState({\n    isEven: \"\",\n    isPrime: \"\",\n    number: \"\",\n    number1: \"\"\n  });\n\n  function handleClick() {\n    let num = inputRef.current.value % 2;\n    let isEven = \"even\";\n\n    if (num === 1) {\n      isEven = \"odd\";\n    }\n\n    setState({ ...state,\n      number: inputRef.current.value,\n      isEven: isEven\n    });\n  }\n\n  function checkPrime() {\n    let val = parseInt(inputRef1.current.value);\n    let isPrime = true;\n\n    for (let i = 2; i < val; i++) {\n      if (val % i === 0) {\n        isPrime = false;\n        break;\n      }\n    }\n\n    setState({ ...state,\n      number1: inputRef1.current.value,\n      isPrime: isPrime\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, \"Check odd or even number\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    ref: inputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }\n  }, \"Click me\"), state.number && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }\n  }, \"This number \", state.number, \" is \", state.isEven), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, \"Check prime number\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    ref: inputRef1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: checkPrime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, \"Click me\"), state.number1 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, \"This number \", state.number1, \" is \", state.isPrime ? \"prime\" : \"non prime\"));\n}","map":{"version":3,"sources":["/var/www/html/react_project/realchat/chatapp/src/Component/Demo/Form.js"],"names":["React","Component","useRef","useState","Newcompo","inputRef","inputRef1","state","setState","isEven","isPrime","number","number1","handleClick","num","current","value","checkPrime","val","parseInt","i"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,MAAzB,EAAgCC,QAAhC,QAA+C,OAA/C;AAEA,eAAe,SAASC,QAAT,GAAmB;AACjC,QAAMC,QAAQ,GAAGH,MAAM,CAAC,EAAD,CAAvB;AACA,QAAMI,SAAS,GAAGJ,MAAM,CAAC,EAAD,CAAxB;AACA,QAAM,CAACK,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC;AACjCM,IAAAA,MAAM,EAAC,EAD0B;AAEjCC,IAAAA,OAAO,EAAC,EAFyB;AAGjCC,IAAAA,MAAM,EAAC,EAH0B;AAIjCC,IAAAA,OAAO,EAAC;AAJyB,GAAD,CAAjC;;AAQA,WAASC,WAAT,GAAuB;AACtB,QAAIC,GAAG,GAAGT,QAAQ,CAACU,OAAT,CAAiBC,KAAjB,GAAuB,CAAjC;AACA,QAAIP,MAAM,GAAG,MAAb;;AACA,QAAGK,GAAG,KAAG,CAAT,EAAW;AACVL,MAAAA,MAAM,GAAC,KAAP;AACA;;AACDD,IAAAA,QAAQ,CAAC,EACR,GAAGD,KADK;AAERI,MAAAA,MAAM,EAACN,QAAQ,CAACU,OAAT,CAAiBC,KAFhB;AAGRP,MAAAA,MAAM,EAAGA;AAHD,KAAD,CAAR;AAKA;;AAED,WAASQ,UAAT,GAAsB;AACrB,QAAIC,GAAG,GAAGC,QAAQ,CAACb,SAAS,CAACS,OAAV,CAAkBC,KAAnB,CAAlB;AACA,QAAIN,OAAO,GAAG,IAAd;;AAGA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC7B,UAAGF,GAAG,GAACE,CAAJ,KAAQ,CAAX,EAAa;AACZV,QAAAA,OAAO,GAAC,KAAR;AACA;AACA;AACD;;AAEDF,IAAAA,QAAQ,CAAC,EACR,GAAGD,KADK;AAERK,MAAAA,OAAO,EAACN,SAAS,CAACS,OAAV,CAAkBC,KAFlB;AAGRN,MAAAA,OAAO,EAAGA;AAHF,KAAD,CAAR;AAKA;;AAID,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADD,eAEC;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,GAAG,EAAEL,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC;AAAQ,IAAA,OAAO,EAAEQ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,EAKEN,KAAK,CAACI,MAAN,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBJ,KAAK,CAACI,MAAtB,UAAkCJ,KAAK,CAACE,MAAxC,CANH,eAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,eASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,eAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVD,eAWC;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,GAAG,EAAEH,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXD,eAYC;AAAQ,IAAA,OAAO,EAAEW,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZD,EAcEV,KAAK,CAACK,OAAN,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBL,KAAK,CAACK,OAAtB,UAAmCL,KAAK,CAACG,OAAN,GAAgB,OAAhB,GAA0B,WAA7D,CAfH,CADD;AAoBA","sourcesContent":["import React ,{Component,useRef,useState} from \"react\"\n\nexport default function Newcompo(){\n\tconst inputRef = useRef(\"\")\n\tconst inputRef1 = useRef(\"\")\n\tconst [state,setState] = useState({\n\t\tisEven:\"\",\n\t\tisPrime:\"\",\n\t\tnumber:\"\",\n\t\tnumber1:\"\",\n\n\t})\n\t\n\tfunction handleClick() {\n\t\tlet num = inputRef.current.value%2;\n\t\tlet isEven = \"even\"\n\t\tif(num===1){\n\t\t\tisEven=\"odd\"\n\t\t}\n\t\tsetState({\n\t\t\t...state,\n\t\t\tnumber:inputRef.current.value,\n\t\t\tisEven  :isEven\n\t\t})\n\t}\n\n\tfunction checkPrime() {\n\t\tlet val = parseInt(inputRef1.current.value);\n\t\tlet isPrime = true;\n\t\t\n\t\t\n\t\tfor (let i = 2; i < val; i++) {\n\t\t\tif(val%i===0){\n\t\t\t\tisPrime=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tsetState({\n\t\t\t...state,\n\t\t\tnumber1:inputRef1.current.value,\n\t\t\tisPrime  :isPrime\n\t\t})\n\t}\n\n\n\n\treturn(\n\t\t<div>\n\t\t\t<p>Check odd or even number</p>\n\t\t\t<input type=\"number\" ref={inputRef}/>\n\t\t\t<button onClick={handleClick}>Click me</button>\n\t\t\t{\n\t\t\t\tstate.number &&\n\t\t\t\t\t<p>This number {state.number} is {state.isEven}</p>\n\t\t\t}\n\t\t\t<br/>\n\t\t\t<br/>\n\t\t\t<p>Check prime number</p>\n\t\t\t<input type=\"number\" ref={inputRef1}/>\n\t\t\t<button onClick={checkPrime}>Click me</button>\n\t\t\t{\n\t\t\t\tstate.number1 &&\n\t\t\t\t\t<p>This number {state.number1} is {state.isPrime ? \"prime\" : \"non prime\"}</p>\n\t\t\t}\n\t\t</div>\n\t)\n}"]},"metadata":{},"sourceType":"module"}