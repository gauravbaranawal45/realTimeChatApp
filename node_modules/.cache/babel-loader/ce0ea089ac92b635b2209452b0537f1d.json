{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\nconst initialState = {\n  userList: [],\n  allUsers: [],\n  userchat: []\n};\n\nfunction setUserList(state, payload) {\n  return { ...state,\n    userList: payload\n  };\n}\n\nfunction setAllusers(state, payload) {\n  return { ...state,\n    allUsers: payload\n  };\n}\n\nfunction setUserchat(state, payload) {\n  let newState = [...state.userchat];\n  console.log(newState); // return {...state,allUsers:payload}\n}\n\nfunction setNewUser(state, item) {\n  let newState = [...state.userList];\n  let payload = {\n    _id: item._id,\n    name: item.name,\n    img: \"\",\n    sendTIme: new Date()\n  };\n  newState.unshift(payload);\n  return { ...state,\n    userList: newState\n  };\n}\n\nconst Chat = (state = initialState, action) => {\n  switch (action.type) {\n    case types.USER_CHAT_LIST:\n      return setUserList(state, action.payload);\n\n    case types.ALL_USER:\n      return setAllusers(state, action.payload);\n\n    case types.ADD_USER_CHAT_LIST:\n      return setNewUser(state, action.payload);\n\n    case types.USER_CHAT:\n      return setUserchat(state, action.payload);\n      ;\n\n    default:\n      return state;\n  }\n};\n\nexport default Chat;","map":{"version":3,"sources":["/var/www/html/react_project/realchat/chatapp/src/reducers/chatReducers.js"],"names":["types","initialState","userList","allUsers","userchat","setUserList","state","payload","setAllusers","setUserchat","newState","console","log","setNewUser","item","_id","name","img","sendTIme","Date","unshift","Chat","action","type","USER_CHAT_LIST","ALL_USER","ADD_USER_CHAT_LIST","USER_CHAT"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAC,EADW;AAEpBC,EAAAA,QAAQ,EAAC,EAFW;AAGjBC,EAAAA,QAAQ,EAAC;AAHQ,CAArB;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,OAA5B,EAAqC;AACjC,SAAO,EAAC,GAAGD,KAAJ;AAAUJ,IAAAA,QAAQ,EAACK;AAAnB,GAAP;AACH;;AAED,SAASC,WAAT,CAAqBF,KAArB,EAA4BC,OAA5B,EAAqC;AACjC,SAAO,EAAC,GAAGD,KAAJ;AAAUH,IAAAA,QAAQ,EAACI;AAAnB,GAAP;AACH;;AAGD,SAASE,WAAT,CAAqBH,KAArB,EAA4BC,OAA5B,EAAqC;AACjC,MAAIG,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACF,QAAV,CAAf;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFiC,CAGjC;AACH;;AAGD,SAASG,UAAT,CAAoBP,KAApB,EAA2BQ,IAA3B,EAAiC;AAC7B,MAAIJ,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACJ,QAAV,CAAf;AACA,MAAIK,OAAO,GAAG;AACZQ,IAAAA,GAAG,EAACD,IAAI,CAACC,GADG;AAEZC,IAAAA,IAAI,EAACF,IAAI,CAACE,IAFE;AAGZC,IAAAA,GAAG,EAAC,EAHQ;AAIZC,IAAAA,QAAQ,EAAC,IAAIC,IAAJ;AAJG,GAAd;AAMAT,EAAAA,QAAQ,CAACU,OAAT,CAAiBb,OAAjB;AACA,SAAO,EAAC,GAAGD,KAAJ;AAAUJ,IAAAA,QAAQ,EAACQ;AAAnB,GAAP;AACH;;AAED,MAAMW,IAAI,GAAG,CAACf,KAAK,GAAGL,YAAT,EAAuBqB,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKvB,KAAK,CAACwB,cAAX;AACI,aAAOnB,WAAW,CAACC,KAAD,EAAOgB,MAAM,CAACf,OAAd,CAAlB;;AACJ,SAAKP,KAAK,CAACyB,QAAX;AACI,aAAOjB,WAAW,CAACF,KAAD,EAAOgB,MAAM,CAACf,OAAd,CAAlB;;AACJ,SAAKP,KAAK,CAAC0B,kBAAX;AACI,aAAOb,UAAU,CAACP,KAAD,EAAOgB,MAAM,CAACf,OAAd,CAAjB;;AACJ,SAAKP,KAAK,CAAC2B,SAAX;AACI,aAAOlB,WAAW,CAACH,KAAD,EAAOgB,MAAM,CAACf,OAAd,CAAlB;AAAyC;;AAC7C;AACI,aAAOD,KAAP;AAVR;AAYH,CAbD;;AAcA,eAAee,IAAf","sourcesContent":["import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n\tuserList:[],\n\tallUsers:[],\n    userchat:[],\n}\n\nfunction setUserList(state, payload) {\n    return {...state,userList:payload}\n}\n\nfunction setAllusers(state, payload) {\n    return {...state,allUsers:payload}\n}\n\n\nfunction setUserchat(state, payload) {\n    let newState = [...state.userchat]\n    console.log(newState)\n    // return {...state,allUsers:payload}\n}\n\n\nfunction setNewUser(state, item) {\n    let newState = [...state.userList]\n    let payload = {\n      _id:item._id,\n      name:item.name,\n      img:\"\",\n      sendTIme:new Date()\n    }\n    newState.unshift(payload)\n    return {...state,userList:newState}\n}\n\nconst Chat = (state = initialState, action) => {\n    switch (action.type) {\n        case types.USER_CHAT_LIST :\n            return setUserList(state,action.payload);\n        case types.ALL_USER :\n            return setAllusers(state,action.payload);\n        case types.ADD_USER_CHAT_LIST :\n            return setNewUser(state,action.payload);\n        case types.USER_CHAT :\n            return setUserchat(state,action.payload);;\n        default:\n            return state;\n    }\n}\nexport default Chat;"]},"metadata":{},"sourceType":"module"}