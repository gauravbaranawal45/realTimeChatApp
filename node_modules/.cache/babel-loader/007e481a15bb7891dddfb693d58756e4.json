{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react_project/realchat/chatapp/src/Component/Messenger/index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Userlist from \"./Userlist\";\nimport Userchat from \"./Userchat\";\nimport { getuserlist, getalluser, addNewUser, getuserchat, sendmsg } from '../../actions/chatActions';\nimport './style.css';\n\nclass index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\",\n      userchat: [],\n      chatusers: [],\n      userList: [],\n      open: false,\n      searchkey: '',\n      searchpeopledata: [],\n      suggetionvalue: [],\n      alluser: []\n    };\n\n    this.onchangeHandler = val => {\n      this.setState({\n        message: val\n      });\n    };\n\n    this.sendmsg = e => {\n      e.preventDefault();\n      let payload = {\n        message: this.state.message,\n        attachmentName: '',\n        attachmentType: '',\n        channelId: this.props.match.params.cid,\n        receiver: this.props.match.params.id\n      };\n      console.log(payload); // this.props.sendmsg(payload)\n\n      this.setState({\n        message: \"\"\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getuserlist(this.props.history);\n    this.props.getalluser();\n    this.props.getuserchat(this.props.match.params.cid);\n  }\n\n  render() {\n    // console.log(this.props.history)\n    // console.log(this.props.chatlistdata)\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Userlist, {\n      chatlistdata: this.props.chatlistdata,\n      addNewUser: this.props.addNewUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Userchat, {\n      userchat: this.props.userchat,\n      onchangeHandler: this.onchangeHandler,\n      message: this.state.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    chatlistdata: state.chat,\n    userchat: state.chat.userchat\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getuserlist: (payload, callback) => dispatch(getuserlist(payload, callback)),\n    getalluser: (payload, callback) => dispatch(getalluser(payload, callback)),\n    addNewUser: (payload, callback) => dispatch(addNewUser(payload, callback)),\n    getuserchat: (payload, callback) => dispatch(getuserchat(payload, callback)),\n    sendmsg: (payload, callback) => dispatch(sendmsg(payload, callback))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(index);","map":{"version":3,"sources":["/var/www/html/react_project/realchat/chatapp/src/Component/Messenger/index.js"],"names":["React","Component","connect","Userlist","Userchat","getuserlist","getalluser","addNewUser","getuserchat","sendmsg","index","state","message","userchat","chatusers","userList","open","searchkey","searchpeopledata","suggetionvalue","alluser","onchangeHandler","val","setState","e","preventDefault","payload","attachmentName","attachmentType","channelId","props","match","params","cid","receiver","id","console","log","componentDidMount","history","render","chatlistdata","mapStateToProps","ownProps","chat","mapDispatchToProps","dispatch","callback"],"mappings":"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","sourcesContent":["import React ,{Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport Userlist from \"./Userlist\";\nimport Userchat from \"./Userchat\";\nimport {getuserlist,getalluser,addNewUser,getuserchat,sendmsg} from '../../actions/chatActions'\nimport './style.css'\n\n\n\n\nclass index extends Component {\n\n\tstate = {\n\t\tmessage:\"\",\n\t    userchat:[],\n\t    chatusers:[],\n\t    userList:[],\n\t    open:false,\n\t    searchkey:'',\n\t    searchpeopledata:[],\n\t    suggetionvalue:[],\n\t    alluser:[],\n\t}\n\n\tcomponentDidMount(){\n\t    this.props.getuserlist(this.props.history)\n\t    this.props.getalluser()\n\t\tthis.props.getuserchat(this.props.match.params.cid)\n\t}\n\n\tonchangeHandler = (val) => {\n\t    this.setState({message:val})\n\t}\n\n\tsendmsg = (e) => {\n\t    e.preventDefault();\n\t    let payload = {\n\t      message:this.state.message,\n\t      attachmentName:'',\n\t      attachmentType:'',\n\t      channelId:this.props.match.params.cid,\n\t      receiver:this.props.match.params.id\n\t    }\n\t    console.log(payload)\n\t    // this.props.sendmsg(payload)\n\t    this.setState({message:\"\"})\n\t}\n\n\trender(){\n\t\t// console.log(this.props.history)\n\t\t// console.log(this.props.chatlistdata)\n\n\t\treturn (\n\t\t    <div className=\"container-fluid h-100\">\n\t\t\t\t<div className=\"row justify-content-center h-100\">\n\t\t\t\t\t<Userlist\n\t\t\t\t\t\tchatlistdata={this.props.chatlistdata}\n\t\t\t\t\t\taddNewUser={this.props.addNewUser}\n\t\t\t\t\t/>\n\t\t\t\t\t<Userchat\n\t\t\t\t\t\tuserchat={this.props.userchat}\n\t\t\t\t\t\tonchangeHandler={this.onchangeHandler}\n\t\t\t\t\t\tmessage={this.state.message}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t  );\t\n\t}\n  \t\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n    \tchatlistdata:state.chat,\n    \tuserchat:state.chat.userchat,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getuserlist: (payload,callback) => dispatch(getuserlist(payload,callback)),\n        getalluser: (payload,callback) => dispatch(getalluser(payload,callback)),\n        addNewUser: (payload,callback) => dispatch(addNewUser(payload,callback)),\n        getuserchat: (payload,callback) => dispatch(getuserchat(payload,callback)),\n        sendmsg: (payload,callback) => dispatch(sendmsg(payload,callback)),\n    };\n  };\n  \nexport default connect(mapStateToProps,mapDispatchToProps)(index)"]},"metadata":{},"sourceType":"module"}