{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\nconst initialState = {\n  userList: [],\n  allUsers: [],\n  userchat: []\n};\n\nfunction setUserList(state, payload) {\n  return { ...state,\n    userList: payload\n  };\n}\n\nfunction setAllusers(state, payload) {\n  return { ...state,\n    allUsers: payload\n  };\n}\n\nfunction setNewUser(state, item) {\n  console.log(item);\n  let newState = [...state.userList];\n  newState = newState.filter(item => item._id !== item._id);\n  console.log('newState', newState); // let payload = {\n  //   _id:item._id,\n  //   name:item.name,\n  //   img:\"\",\n  //   sendTIme:new Date()\n  // }\n\n  newState.unshift(item);\n  return { ...state,\n    userList: newState\n  };\n}\n\nfunction setNewmsg(state, payload) {\n  let newState = [...state.userchat];\n  newState.push(payload);\n  console.log(newState);\n  return { ...state,\n    userchat: newState\n  };\n}\n\nconst Chat = (state = initialState, action) => {\n  switch (action.type) {\n    case types.USER_CHAT_LIST:\n      return setUserList(state, action.payload);\n\n    case types.ALL_USER:\n      return setAllusers(state, action.payload);\n\n    case types.ADD_NEWUSER:\n      return setNewUser(state, action.payload);\n\n    case types.USER_CHAT:\n      return { ...state,\n        userchat: action.payload\n      };\n\n    case types.SEND_MSG:\n      return setNewmsg(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default Chat;","map":{"version":3,"sources":["/var/www/html/react_project/realchat/chatapp/src/reducers/chatReducers.js"],"names":["types","initialState","userList","allUsers","userchat","setUserList","state","payload","setAllusers","setNewUser","item","console","log","newState","filter","_id","unshift","setNewmsg","push","Chat","action","type","USER_CHAT_LIST","ALL_USER","ADD_NEWUSER","USER_CHAT","SEND_MSG"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAC,EADW;AAEpBC,EAAAA,QAAQ,EAAC,EAFW;AAGjBC,EAAAA,QAAQ,EAAC;AAHQ,CAArB;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,OAA5B,EAAqC;AACjC,SAAO,EAAC,GAAGD,KAAJ;AAAUJ,IAAAA,QAAQ,EAACK;AAAnB,GAAP;AACH;;AAED,SAASC,WAAT,CAAqBF,KAArB,EAA4BC,OAA5B,EAAqC;AACjC,SAAO,EAAC,GAAGD,KAAJ;AAAUH,IAAAA,QAAQ,EAACI;AAAnB,GAAP;AACH;;AAED,SAASE,UAAT,CAAoBH,KAApB,EAA2BI,IAA3B,EAAiC;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAIG,QAAQ,GAAG,CAAC,GAAGP,KAAK,CAACJ,QAAV,CAAf;AACAW,EAAAA,QAAQ,GAAGA,QAAQ,CAACC,MAAT,CAAgBJ,IAAI,IAAEA,IAAI,CAACK,GAAL,KAAWL,IAAI,CAACK,GAAtC,CAAX;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBC,QAAvB,EAJ6B,CAK7B;AACA;AACA;AACA;AACA;AACA;;AACAA,EAAAA,QAAQ,CAACG,OAAT,CAAiBN,IAAjB;AACA,SAAO,EAAC,GAAGJ,KAAJ;AAAUJ,IAAAA,QAAQ,EAACW;AAAnB,GAAP;AACH;;AAED,SAASI,SAAT,CAAmBX,KAAnB,EAA0BC,OAA1B,EAAmC;AAC/B,MAAIM,QAAQ,GAAG,CAAC,GAAGP,KAAK,CAACF,QAAV,CAAf;AACAS,EAAAA,QAAQ,CAACK,IAAT,CAAcX,OAAd;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,SAAO,EAAC,GAAGP,KAAJ;AAAUF,IAAAA,QAAQ,EAACS;AAAnB,GAAP;AACH;;AAGD,MAAMM,IAAI,GAAG,CAACb,KAAK,GAAGL,YAAT,EAAuBmB,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKrB,KAAK,CAACsB,cAAX;AACI,aAAOjB,WAAW,CAACC,KAAD,EAAOc,MAAM,CAACb,OAAd,CAAlB;;AACJ,SAAKP,KAAK,CAACuB,QAAX;AACI,aAAOf,WAAW,CAACF,KAAD,EAAOc,MAAM,CAACb,OAAd,CAAlB;;AACJ,SAAKP,KAAK,CAACwB,WAAX;AACI,aAAOf,UAAU,CAACH,KAAD,EAAOc,MAAM,CAACb,OAAd,CAAjB;;AACJ,SAAKP,KAAK,CAACyB,SAAX;AACI,aAAO,EAAC,GAAGnB,KAAJ;AAAUF,QAAAA,QAAQ,EAACgB,MAAM,CAACb;AAA1B,OAAP;;AACJ,SAAKP,KAAK,CAAC0B,QAAX;AACI,aAAOT,SAAS,CAACX,KAAD,EAAOc,MAAM,CAACb,OAAd,CAAhB;;AACJ;AACI,aAAOD,KAAP;AAZR;AAcH,CAfD;;AAgBA,eAAea,IAAf","sourcesContent":["import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n\tuserList:[],\n\tallUsers:[],\n    userchat:[],\n}\n\nfunction setUserList(state, payload) {\n    return {...state,userList:payload}\n}\n\nfunction setAllusers(state, payload) {\n    return {...state,allUsers:payload}\n}\n\nfunction setNewUser(state, item) {\n    console.log(item)\n    let newState = [...state.userList]\n    newState = newState.filter(item=>item._id!==item._id)\n    console.log('newState',newState)\n    // let payload = {\n    //   _id:item._id,\n    //   name:item.name,\n    //   img:\"\",\n    //   sendTIme:new Date()\n    // }\n    newState.unshift(item)\n    return {...state,userList:newState}\n}\n\nfunction setNewmsg(state, payload) {\n    let newState = [...state.userchat]\n    newState.push(payload)\n    console.log(newState)\n    return {...state,userchat:newState}\n}\n\n\nconst Chat = (state = initialState, action) => {\n    switch (action.type) {\n        case types.USER_CHAT_LIST :\n            return setUserList(state,action.payload);\n        case types.ALL_USER :\n            return setAllusers(state,action.payload);\n        case types.ADD_NEWUSER :\n            return setNewUser(state,action.payload);\n        case types.USER_CHAT :\n            return {...state,userchat:action.payload};\n        case types.SEND_MSG :\n            return setNewmsg(state,action.payload);\n        default:\n            return state;\n    }\n}\nexport default Chat;"]},"metadata":{},"sourceType":"module"}