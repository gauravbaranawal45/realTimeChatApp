{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react_project/realchat/chatapp/src/Component/Messenger/Messenger.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Userlist from \"./Userlist\";\nimport Userchat from \"./Userchat\";\nimport { getuserlist, getalluser, addNewUser, getuserchat, sendmsg } from '../../actions/chatActions';\nimport './style.css';\n\nconst Messenger = props => {\n  const [state, setState] = React.useState({\n    message: \"\",\n    userchat: [],\n    chatusers: [],\n    userList: [],\n    open: false,\n    searchkey: '',\n    searchpeopledata: [],\n    suggetionvalue: [],\n    alluser: []\n  }); // React.useEffect(() => {\n  // \tlet socket = props.socket;\n  // \tif (socket) {\n  //       \tsocket.on(\"usermsg\", (message) => {\n  //         \t// const newMessages = [...messages, message];\n  //         \t// setMessages(newMessages);\n  //         \tconsole.log('message',message)\n  //       \t});\n  //     }\n  //  \t}, [props.socket,props.match.params]);\n\n  React.useEffect(() => {\n    props.getuserlist(props.history);\n    props.getalluser();\n    props.getuserchat(props.match.params.cid); // if (socket) {\n    //     \tsocket.emit(\"getchat\", {\n    //        channelId:props.match.params.cid,\n    //    });\n    //   }\n  }, []);\n  React.useEffect(() => {\n    props.getuserchat(props.match.params.cid);\n  }, [props.match.params.cid]); // componentDidMount(){\n  //     this.props.getuserlist(this.props.history)\n  //     this.props.getalluser()\n  // \tthis.props.getuserchat(this.props.match.params.cid)\n  // \tlet socket = this.props.socket;\n  // }\n  // componentDidUpdate(PrevProps){\n  // \tlet socket = this.props.socket;\n  // \tif(PrevProps.socket!==this.props.socket){\n  // \t\tlet socket = this.props.socket;\n  // \t\t// console.log('qq',socket,this.props.match)\n  // \t\tif (socket) {\n  // \t      \tsocket.emit(\"getchat\", {\n  // \t\t        channelId:this.props.match.params.cid,\n  // \t\t    });\n  // \t    }\n  // \t    if (socket) {\n  // \t      \tsocket.on(\"usermsg\", (message) => {\n  // \t        \t// const newMessages = [...messages, message];\n  // \t        \t// setMessages(newMessages);\n  // \t        \tconsole.log('message',message)\n  // \t      \t});\n  // \t    }\n  // \t}\n  //     if(PrevProps.match.params.cid!==this.props.match.params.cid){\n  //       \tthis.props.getuserchat(this.props.match.params.cid)\n  //       \t// if (socket) {\n  // \t      // \tsocket.on(\"usermsg\", (message) => {\n  // \t      //   \t// const newMessages = [...messages, message];\n  // \t      //   \t// setMessages(newMessages);\n  // \t      //   \tconsole.log('message',message)\n  // \t      // \t});\n  // \t    // }\n  //     }\n  // }\n\n  const onchangeHandler = val => {\n    setState({ ...state,\n      message: val\n    });\n  };\n\n  const sendmsg = e => {\n    e.preventDefault();\n    let payload = {\n      message: state.message,\n      attachmentName: '',\n      attachmentType: '',\n      channelId: props.match.params.cid,\n      receiver: props.match.params.id\n    };\n    props.sendmsg(payload);\n    setState({ ...state,\n      message: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center h-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Userlist, {\n    chatlistdata: props.chatlistdata,\n    addNewUser: props.addNewUser,\n    receiver: props.match.params.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Userchat, {\n    userchat: props.userchat,\n    onchangeHandler: onchangeHandler,\n    message: state.message,\n    sendmsg: sendmsg,\n    receiver: props.match.params.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  })));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    chatlistdata: state.chat,\n    userchat: state.chat.userchat\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getuserlist: (payload, callback) => dispatch(getuserlist(payload, callback)),\n    getalluser: (payload, callback) => dispatch(getalluser(payload, callback)),\n    addNewUser: (payload, callback) => dispatch(addNewUser(payload, callback)),\n    getuserchat: (payload, callback) => dispatch(getuserchat(payload, callback)),\n    sendmsg: (payload, callback) => dispatch(sendmsg(payload, callback))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Messenger));","map":{"version":3,"sources":["/var/www/html/react_project/realchat/chatapp/src/Component/Messenger/Messenger.js"],"names":["React","Component","connect","withRouter","Userlist","Userchat","getuserlist","getalluser","addNewUser","getuserchat","sendmsg","Messenger","props","state","setState","useState","message","userchat","chatusers","userList","open","searchkey","searchpeopledata","suggetionvalue","alluser","useEffect","history","match","params","cid","onchangeHandler","val","e","preventDefault","payload","attachmentName","attachmentType","channelId","receiver","id","chatlistdata","mapStateToProps","ownProps","chat","mapDispatchToProps","dispatch","callback"],"mappings":"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","sourcesContent":["import React ,{Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport Userlist from \"./Userlist\";\nimport Userchat from \"./Userchat\";\nimport {getuserlist,getalluser,addNewUser,getuserchat,sendmsg} from '../../actions/chatActions'\nimport './style.css'\n\n\n\n\nconst Messenger = (props) => {\n\n\tconst [state,setState] = React.useState({\n\t\tmessage:\"\",\n\t    userchat:[],\n\t    chatusers:[],\n\t    userList:[],\n\t    open:false,\n\t    searchkey:'',\n\t    searchpeopledata:[],\n\t    suggetionvalue:[],\n\t    alluser:[],\n\t})\n\n\t// React.useEffect(() => {\n\t// \tlet socket = props.socket;\n\t// \tif (socket) {\n\t//       \tsocket.on(\"usermsg\", (message) => {\n\t//         \t// const newMessages = [...messages, message];\n\t//         \t// setMessages(newMessages);\n\t//         \tconsole.log('message',message)\n\t//       \t});\n\t//     }\n //  \t}, [props.socket,props.match.params]);\n\n \tReact.useEffect(() => {\n \t\tprops.getuserlist(props.history)\n\t\tprops.getalluser()\n\t\tprops.getuserchat(props.match.params.cid)\n \t\t// if (socket) {\n\t  //     \tsocket.emit(\"getchat\", {\n\t\t //        channelId:props.match.params.cid,\n\t\t //    });\n\t  //   }\n\t}, []);\n\n\n \tReact.useEffect(() => {\n\t\tprops.getuserchat(props.match.params.cid)\n\t}, [props.match.params.cid]);\n\n\n\t// componentDidMount(){\n\t//     this.props.getuserlist(this.props.history)\n\t//     this.props.getalluser()\n\t// \tthis.props.getuserchat(this.props.match.params.cid)\n\t// \tlet socket = this.props.socket;\n\t\t\n\t// }\n\n\t// componentDidUpdate(PrevProps){\n\t// \tlet socket = this.props.socket;\n\t// \tif(PrevProps.socket!==this.props.socket){\n\t// \t\tlet socket = this.props.socket;\n\t// \t\t// console.log('qq',socket,this.props.match)\n\t// \t\tif (socket) {\n\t// \t      \tsocket.emit(\"getchat\", {\n\t// \t\t        channelId:this.props.match.params.cid,\n\t// \t\t    });\n\t// \t    }\n\n\t// \t    if (socket) {\n\t// \t      \tsocket.on(\"usermsg\", (message) => {\n\t// \t        \t// const newMessages = [...messages, message];\n\t// \t        \t// setMessages(newMessages);\n\t// \t        \tconsole.log('message',message)\n\t// \t      \t});\n\t// \t    }\n\t// \t}\n\t//     if(PrevProps.match.params.cid!==this.props.match.params.cid){\n\t//       \tthis.props.getuserchat(this.props.match.params.cid)\n\t//       \t// if (socket) {\n\t// \t      // \tsocket.on(\"usermsg\", (message) => {\n\t// \t      //   \t// const newMessages = [...messages, message];\n\t// \t      //   \t// setMessages(newMessages);\n\t// \t      //   \tconsole.log('message',message)\n\t// \t      // \t});\n\t// \t    // }\n\t//     }\n\t// }\n\n\tconst onchangeHandler = (val) => {\n\t    setState({...state,message:val})\n\t}\n\n\tconst sendmsg = (e) => {\n\t    e.preventDefault();\n\t    let payload = {\n\t\t\tmessage:state.message,\n\t\t\tattachmentName:'',\n\t\t\tattachmentType:'',\n\t\t\tchannelId:props.match.params.cid,\n\t\t\treceiver:props.match.params.id\n\t    }\n\t    props.sendmsg(payload)\n\t    setState({...state,message:\"\"})\n\t}\n\n\n\n\treturn (\n\t    <div className=\"container-fluid h-100\">\n\t\t\t<div className=\"row justify-content-center h-100\">\n\t\t\t\t<Userlist\n\t\t\t\t\tchatlistdata={props.chatlistdata}\n\t\t\t\t\taddNewUser={props.addNewUser}\n\t\t\t\t\treceiver={props.match.params.id}\n\t\t\t\t/>\n\t\t\t\t<Userchat\n\t\t\t\t\tuserchat={props.userchat}\n\t\t\t\t\tonchangeHandler={onchangeHandler}\n\t\t\t\t\tmessage={state.message}\n\t\t\t\t\tsendmsg={sendmsg}\n\t\t\t\t\treceiver={props.match.params.id}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t  );\n  \t\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n    \tchatlistdata:state.chat,\n    \tuserchat:state.chat.userchat,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getuserlist: (payload,callback) => dispatch(getuserlist(payload,callback)),\n        getalluser: (payload,callback) => dispatch(getalluser(payload,callback)),\n        addNewUser: (payload,callback) => dispatch(addNewUser(payload,callback)),\n        getuserchat: (payload,callback) => dispatch(getuserchat(payload,callback)),\n        sendmsg: (payload,callback) => dispatch(sendmsg(payload,callback)),\n    };\n  };\n  \nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Messenger))"]},"metadata":{},"sourceType":"module"}