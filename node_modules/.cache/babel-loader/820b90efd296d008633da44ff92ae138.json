{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react_project/realchat/realtimechat/src/Component/Chat/ChatContainer.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport Chatlist from './Chatlist';\nimport Chat from './Chat';\nimport './style.css';\n\nclass ChatContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\",\n      userchat: [],\n      chatusers: []\n    };\n\n    this.getchatuser = () => {\n      axios.get(\"http://localhost:8000/chatroom/chateduser\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        // setSearchpeopledata(res.data)\n        // setAlluser(res.data)\n        let firstId = res.data[0]._id;\n      }).catch(err => {// setTimeout(getUsers,3000)\n      });\n    };\n\n    this.getuserchat = id => {\n      axios.get(\"http://localhost:8000/chatroom/getuserchat/\" + id, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        // console.log(res.data)\n        this.setState({\n          userchat: res.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.sendmsg = e => {\n      e.preventDefault();\n      let payload = {\n        message: this.state.message,\n        attachment: '',\n        receiver: this.props.match.params.id\n      };\n      axios.post(\"http://localhost:8000/chatroom/savechat\", payload, {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"CC_Token\")\n        }\n      }).then(res => {\n        this.setState({\n          message: \"\"\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onchangeHandler = val => {\n      this.setState({\n        message: val\n      });\n    };\n\n    this.selectuser = id => {};\n  }\n\n  componentDidMount() {\n    this.getuserchat(this.props.match.params.id);\n  }\n\n  componentDidUpdate(PrevProps) {\n    // console.log(PrevProps.match.params.id,this.props.match.params.id)\n    if (PrevProps.match.params.id !== this.props.match.params.id) {\n      this.getuserchat(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Chatlist, {\n      state: this.state,\n      sender: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Chat, {\n      selectuser: this.selectuser,\n      sendmsg: this.sendmsg,\n      state: this.state,\n      onchangeHandler: this.onchangeHandler,\n      sender: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }));\n  }\n\n}\n\nexport default withRouter(ChatContainer);","map":{"version":3,"sources":["/var/www/html/react_project/realchat/realtimechat/src/Component/Chat/ChatContainer.js"],"names":["React","Component","axios","withRouter","Chatlist","Chat","ChatContainer","state","message","userchat","chatusers","getchatuser","get","headers","Authorization","localStorage","getItem","then","res","firstId","data","_id","catch","err","getuserchat","id","setState","console","log","sendmsg","e","preventDefault","payload","attachment","receiver","props","match","params","post","onchangeHandler","val","selectuser","componentDidMount","componentDidUpdate","PrevProps","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport Chatlist from './Chatlist'\nimport Chat from './Chat'\nimport './style.css'\n\nclass ChatContainer extends Component{\n\n  state = {\n    message:\"\",\n    userchat:[],\n    chatusers:[]\n  }\n\n  getchatuser = () => {\n      axios.get(\"http://localhost:8000/chatroom/chateduser\",{\n          headers:{\n            Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n          }\n      })\n        .then(res=>{\n          // setSearchpeopledata(res.data)\n          // setAlluser(res.data)\n          let firstId = res.data[0]._id;\n\n      })\n      .catch(err=>{\n        // setTimeout(getUsers,3000)\n      })\n  }\n\n  getuserchat = (id) => {\n    axios.get(\"http://localhost:8000/chatroom/getuserchat/\"+id,{\n        headers:{\n          Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n        }\n    })\n    .then(res=>{\n      // console.log(res.data)\n      this.setState({userchat:res.data}) \n    })\n    .catch(err=>{\n      console.log(err)    \n    })\n  }\n\n  componentDidMount(){\n    this.getuserchat(this.props.match.params.id)\n  }\n\n  componentDidUpdate(PrevProps){\n    // console.log(PrevProps.match.params.id,this.props.match.params.id)\n    if(PrevProps.match.params.id!==this.props.match.params.id){\n      this.getuserchat(this.props.match.params.id)\n    }\n  }\n\n  sendmsg = (e) => {\n    e.preventDefault();\n    let payload = {\n      message:this.state.message,\n      attachment:'',\n      receiver:this.props.match.params.id\n    }\n    axios.post(\"http://localhost:8000/chatroom/savechat\",payload,{\n        headers:{\n          Authorization:\"Bearer \"+localStorage.getItem(\"CC_Token\"),\n        }\n    })\n    .then(res=>{\n      this.setState({message:\"\"})\n    })\n    .catch(err=>{\n      console.log(err)    \n    })\n  }\n  \n  onchangeHandler = (val) => {\n    this.setState({message:val})\n  }\n\n  selectuser = (id) => {\n    \n  }\n\n  render(){\n    return(\n          <div id=\"container\">\n              <Chatlist state={this.state} sender={this.props.match.params.id}/>\n              <Chat selectuser={this.selectuser} sendmsg={this.sendmsg} state={this.state} onchangeHandler={this.onchangeHandler} sender={this.props.match.params.id}/>\n          </div>\n      );\n    }\n}\n\n\nexport default withRouter(ChatContainer)"]},"metadata":{},"sourceType":"module"}