{"ast":null,"code":"import * as types from \"../constants/ActionTypes\";\nconst initialState = {\n  userList: [],\n  allUsers: []\n};\n\nfunction setUserList(state, payload) {\n  return { ...state,\n    userList: payload\n  };\n}\n\nfunction setAllusers(state, payload) {\n  return { ...state,\n    allUsers: payload\n  };\n}\n\nfunction setNewUser(state, item) {\n  let newState = [...state.userList];\n  let payload = {\n    _id: item._id,\n    name: item.name,\n    img: \"\",\n    sendTIme: new Date()\n  };\n  newState.unshift(payload);\n  return { ...state,\n    userList: newState\n  };\n}\n\nconst Chat = (state = initialState, action) => {\n  switch (action.type) {\n    case types.USER_CHAT_LIST:\n      return setUserList(state, action.payload);\n\n    case types.ALL_USER:\n      return setAllusers(state, action.payload);\n\n    case types.ADD_USER_CHAT_LIST:\n      return setNewUser(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default Chat;","map":{"version":3,"sources":["/var/www/html/react_project/realchat/chatapp/src/reducers/chatReducers.js"],"names":["types","initialState","userList","allUsers","setUserList","state","payload","setAllusers","setNewUser","item","newState","_id","name","img","sendTIme","Date","unshift","Chat","action","type","USER_CHAT_LIST","ALL_USER","ADD_USER_CHAT_LIST"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAC,EADW;AAEpBC,EAAAA,QAAQ,EAAC;AAFW,CAArB;;AAKA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,OAA5B,EAAqC;AACjC,SAAO,EAAC,GAAGD,KAAJ;AAAUH,IAAAA,QAAQ,EAACI;AAAnB,GAAP;AACH;;AAED,SAASC,WAAT,CAAqBF,KAArB,EAA4BC,OAA5B,EAAqC;AACjC,SAAO,EAAC,GAAGD,KAAJ;AAAUF,IAAAA,QAAQ,EAACG;AAAnB,GAAP;AACH;;AAED,SAASE,UAAT,CAAoBH,KAApB,EAA2BI,IAA3B,EAAiC;AAC7B,MAAIC,QAAQ,GAAG,CAAC,GAAGL,KAAK,CAACH,QAAV,CAAf;AACA,MAAII,OAAO,GAAG;AACZK,IAAAA,GAAG,EAACF,IAAI,CAACE,GADG;AAEZC,IAAAA,IAAI,EAACH,IAAI,CAACG,IAFE;AAGZC,IAAAA,GAAG,EAAC,EAHQ;AAIZC,IAAAA,QAAQ,EAAC,IAAIC,IAAJ;AAJG,GAAd;AAMAL,EAAAA,QAAQ,CAACM,OAAT,CAAiBV,OAAjB;AACA,SAAO,EAAC,GAAGD,KAAJ;AAAUH,IAAAA,QAAQ,EAACQ;AAAnB,GAAP;AACH;;AAED,MAAMO,IAAI,GAAG,CAACZ,KAAK,GAAGJ,YAAT,EAAuBiB,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKnB,KAAK,CAACoB,cAAX;AACI,aAAOhB,WAAW,CAACC,KAAD,EAAOa,MAAM,CAACZ,OAAd,CAAlB;;AACJ,SAAKN,KAAK,CAACqB,QAAX;AACI,aAAOd,WAAW,CAACF,KAAD,EAAOa,MAAM,CAACZ,OAAd,CAAlB;;AACJ,SAAKN,KAAK,CAACsB,kBAAX;AACI,aAAOd,UAAU,CAACH,KAAD,EAAOa,MAAM,CAACZ,OAAd,CAAjB;;AACJ;AACI,aAAOD,KAAP;AARR;AAUH,CAXD;;AAYA,eAAeY,IAAf","sourcesContent":["import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n\tuserList:[],\n\tallUsers:[]\n}\n\nfunction setUserList(state, payload) {\n    return {...state,userList:payload}\n}\n\nfunction setAllusers(state, payload) {\n    return {...state,allUsers:payload}\n}\n\nfunction setNewUser(state, item) {\n    let newState = [...state.userList]\n    let payload = {\n      _id:item._id,\n      name:item.name,\n      img:\"\",\n      sendTIme:new Date()\n    }\n    newState.unshift(payload)\n    return {...state,userList:newState}\n}\n\nconst Chat = (state = initialState, action) => {\n    switch (action.type) {\n        case types.USER_CHAT_LIST :\n            return setUserList(state,action.payload);\n        case types.ALL_USER :\n            return setAllusers(state,action.payload);\n        case types.ADD_USER_CHAT_LIST :\n            return setNewUser(state,action.payload);\n        default:\n            return state;\n    }\n}\nexport default Chat;"]},"metadata":{},"sourceType":"module"}